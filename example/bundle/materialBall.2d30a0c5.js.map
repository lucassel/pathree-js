{"mappings":"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","sources":["example/materialBall.js"],"sourcesContent":["import * as THREE from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { PathTracingRenderer, PhysicalPathTracingMaterial, PhysicalCamera, BlurredEnvMapGenerator, EquirectCamera } from '../src/index.js';\nimport { PathTracingSceneWorker } from '../src/workers/PathTracingSceneWorker.js';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\n\nlet renderer, controls, sceneInfo, ptRenderer, activeCamera, fsQuad, materials;\nlet perspectiveCamera, orthoCamera, equirectCamera;\nlet envMap, envMapGenerator, scene;\nlet samplesEl;\n\nconst orthoWidth = 5;\n\nconst params = {\n\n\tmaterial1: {\n\t\tcolor: '#ffc766',\n\t\temissive: '#000000',\n\t\temissiveIntensity: 1,\n\t\troughness: 0.1,\n\t\tmetalness: 0.8,\n\t\tior: 1.495,\n\t\ttransmission: 0.0,\n\t\topacity: 1.0,\n\t\tclearcoat: 0.0,\n\t\tclearcoatRoughness: 0.0,\n\t\tmatte: false,\n\t\tcastShadow: true,\n\t},\n\tmaterial2: {\n\t\tcolor: '#db7157',\n\t\temissive: '#000000',\n\t\temissiveIntensity: 1,\n\t\troughness: 0.8,\n\t\tmetalness: 0.1,\n\t\ttransmission: 0.0,\n\t\tior: 1.495,\n\t\topacity: 1.0,\n\t\tclearcoat: 0.0,\n\t\tclearcoatRoughness: 0.0,\n\t\tmatte: false,\n\t\tcastShadow: true,\n\t},\n\tmaterial3: {\n\t\tcolor: '#000000',\n\t\troughness: 0.01,\n\t\tmetalness: 0.05,\n\t\tclearcoat: 0.0,\n\t\tclearcoatRoughness: 0.0,\n\t\tmatte: false,\n\t\tcastShadow: true,\n\t},\n\n\tmultipleImportanceSampling: true,\n\tstableNoise: false,\n\tenvironmentIntensity: 1,\n\tenvironmentRotation: 0,\n\tenvironmentBlur: 0.0,\n\tbackgroundBlur: 0.0,\n\tbounces: 5,\n\tsamplesPerFrame: 1,\n\tacesToneMapping: true,\n\tresolutionScale: 1 / window.devicePixelRatio,\n\ttransparentTraversals: 20,\n\tfilterGlossyFactor: 0.5,\n\ttiles: 1,\n\tbackgroundAlpha: 1,\n\tcheckerboardTransparency: true,\n\tcameraProjection: 'Perspective',\n};\n\nif ( window.location.hash.includes( 'transmission' ) ) {\n\n\tparams.material1.metalness = 0.0;\n\tparams.material1.roughness = 0.05;\n\tparams.material1.transmission = 1.0;\n\tparams.material1.color = '#ffffff';\n\tparams.bounces = 10;\n\n}\n\n// adjust performance parameters for mobile\nconst aspectRatio = window.innerWidth / window.innerHeight;\nif ( aspectRatio < 0.65 ) {\n\n\tparams.bounces = Math.max( params.bounces, 6 );\n\tparams.resolutionScale *= 0.5;\n\tparams.tiles = 2;\n\tparams.multipleImportanceSampling = false;\n\tparams.environmentBlur = 0.35;\n\n}\n\ninit();\n\nasync function init() {\n\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.toneMapping = THREE.ACESFilmicToneMapping;\n\trenderer.outputEncoding = THREE.sRGBEncoding;\n\trenderer.setClearColor( 0, 0 );\n\tdocument.body.appendChild( renderer.domElement );\n\n\tconst aspect = window.innerWidth / window.innerHeight;\n\tperspectiveCamera = new PhysicalCamera( 75, aspect, 0.025, 500 );\n\tperspectiveCamera.position.set( - 4, 2, 3 );\n\n\tconst orthoHeight = orthoWidth / aspect;\n\torthoCamera = new THREE.OrthographicCamera( orthoWidth / - 2, orthoWidth / 2, orthoHeight / 2, orthoHeight / - 2, 0, 100 );\n\torthoCamera.position.set( - 4, 2, 3 );\n\n\tequirectCamera = new EquirectCamera();\n\tequirectCamera.position.set( - 4, 2, 3 );\n\n\tptRenderer = new PathTracingRenderer( renderer );\n\tptRenderer.alpha = true;\n\tptRenderer.material = new PhysicalPathTracingMaterial();\n\tptRenderer.material.setDefine( 'TRANSPARENT_TRAVERSALS', params.transparentTraversals );\n\tptRenderer.material.setDefine( 'FEATURE_MIS', Number( params.multipleImportanceSampling ) );\n\tptRenderer.tiles.set( params.tiles, params.tiles );\n\n\tfsQuad = new FullScreenQuad( new THREE.MeshBasicMaterial( {\n\t\tmap: ptRenderer.target.texture,\n\t\tblending: THREE.CustomBlending,\n\t} ) );\n\n\tcontrols = new OrbitControls( perspectiveCamera, renderer.domElement );\n\tcontrols.addEventListener( 'change', () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\n\tscene = new THREE.Scene();\n\n\tsamplesEl = document.getElementById( 'samples' );\n\n\tenvMapGenerator = new BlurredEnvMapGenerator( renderer );\n\n\tconst envMapPromise = new Promise( resolve => {\n\n\t\tnew RGBELoader()\n\t\t\t.load( 'https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/textures/equirectangular/royal_esplanade_1k.hdr', texture => {\n\n\t\t\t\tenvMap = texture;\n\n\t\t\t\tupdateEnvBlur();\n\t\t\t\tresolve();\n\n\t\t\t} );\n\n\t} );\n\n\tconst generator = new PathTracingSceneWorker();\n\tconst gltfPromise = new GLTFLoader()\n\t\t.setMeshoptDecoder( MeshoptDecoder )\n\t\t.loadAsync( 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/material-balls/material_ball_v2.glb' )\n\t\t.then( gltf => {\n\n\t\t\tconst group = new THREE.Group();\n\n\t\t\tgltf.scene.scale.setScalar( 0.01 );\n\t\t\tgltf.scene.updateMatrixWorld();\n\t\t\tgroup.add( gltf.scene );\n\n\t\t\tconst box = new THREE.Box3();\n\t\t\tbox.setFromObject( gltf.scene );\n\n\t\t\tconst floor = new THREE.Mesh(\n\t\t\t\tnew THREE.CylinderBufferGeometry( 3, 3, 0.05, 200 ),\n\t\t\t\tnew THREE.MeshStandardMaterial( { color: 0xffffff, roughness: 0, metalness: 0.25 } ),\n\t\t\t);\n\t\t\tfloor.geometry = floor.geometry.toNonIndexed();\n\t\t\tfloor.geometry.clearGroups();\n\t\t\tfloor.position.y = box.min.y - 0.03;\n\t\t\tgroup.add( floor );\n\n\t\t\tconst material1 = new THREE.MeshStandardMaterial();\n\t\t\tconst material2 = new THREE.MeshStandardMaterial();\n\n\t\t\tgltf.scene.traverse( c => {\n\n\t\t\t\t// the vertex normals on the material ball are off...\n\t\t\t\t// TODO: precompute the vertex normals so they are correct on load\n\t\t\t\tif ( c.geometry ) {\n\n\t\t\t\t\tc.geometry.computeVertexNormals();\n\n\t\t\t\t}\n\n\t\t\t\tif ( c.name === 'Sphere_1' ) {\n\n\t\t\t\t\tc.material = material2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tc.material = material1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( c.name === 'subsphere_1' ) {\n\n\t\t\t\t\tc.material = material2;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tmaterials = [ material1, material2, floor.material ];\n\n\t\t\treturn generator.generate( group );\n\n\t\t} )\n\t\t.then( result => {\n\n\t\t\tsceneInfo = result;\n\n\t\t\tscene.add( result.scene );\n\n\t\t\tconst { bvh, textures, materials } = result;\n\t\t\tconst geometry = bvh.geometry;\n\t\t\tconst material = ptRenderer.material;\n\n\t\t\tmaterial.bvh.updateFrom( bvh );\n\t\t\tmaterial.normalAttribute.updateFrom( geometry.attributes.normal );\n\t\t\tmaterial.tangentAttribute.updateFrom( geometry.attributes.tangent );\n\t\t\tmaterial.uvAttribute.updateFrom( geometry.attributes.uv );\n\t\t\tmaterial.materialIndexAttribute.updateFrom( geometry.attributes.materialIndex );\n\t\t\tmaterial.textures.setTextures( renderer, 2048, 2048, textures );\n\t\t\tmaterial.materials.updateFrom( materials, textures );\n\n\t\t\tgenerator.dispose();\n\n\t\t} );\n\n\tawait Promise.all( [ gltfPromise, envMapPromise ] );\n\n\tdocument.getElementById( 'loading' ).remove();\n\tdocument.body.classList.add( 'checkerboard' );\n\n\tonResize();\n\twindow.addEventListener( 'resize', onResize );\n\tconst gui = new GUI();\n\n\tupdateCamera( params.cameraProjection );\n\n\tconst ptFolder = gui.addFolder( 'Path Tracing' );\n\tptFolder.add( params, 'acesToneMapping' ).onChange( value => {\n\n\t\trenderer.toneMapping = value ? THREE.ACESFilmicToneMapping : THREE.NoToneMapping;\n\t\tfsQuad.material.needsUpdate = true;\n\n\t} );\n\tptFolder.add( params, 'stableNoise' ).onChange( value => {\n\n\t\tptRenderer.stableNoise = value;\n\n\t} );\n\tptFolder.add( params, 'multipleImportanceSampling' ).onChange( value => {\n\n\t\tptRenderer.material.setDefine( 'FEATURE_MIS', Number( value ) );\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'tiles', 1, 4, 1 ).onChange( value => {\n\n\t\tptRenderer.tiles.set( value, value );\n\n\t} );\n\tptFolder.add( params, 'samplesPerFrame', 1, 10, 1 );\n\tptFolder.add( params, 'filterGlossyFactor', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'bounces', 1, 30, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'transparentTraversals', 0, 40, 1 ).onChange( value => {\n\n\t\tptRenderer.material.setDefine( 'TRANSPARENT_TRAVERSALS', value );\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'resolutionScale', 0.1, 1 ).onChange( () => {\n\n\t\tonResize();\n\n\t} );\n\n\tconst envFolder = gui.addFolder( 'Environment' );\n\tenvFolder.add( params, 'environmentIntensity', 0, 10 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'environmentRotation', 0, 2 * Math.PI ).onChange( v => {\n\n\t\tptRenderer.material.environmentRotation.setFromMatrix4( new THREE.Matrix4().makeRotationY( v ) );\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'environmentBlur', 0, 1 ).onChange( () => {\n\n\t\tupdateEnvBlur();\n\n\t} );\n\tenvFolder.add( params, 'backgroundBlur', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'backgroundAlpha', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'checkerboardTransparency' ).onChange( v => {\n\n\t\tif ( v ) {\n\n\t\t\tdocument.body.classList.add( 'checkerboard' );\n\n\t\t} else {\n\n\t\t\tdocument.body.classList.remove( 'checkerboard' );\n\n\t\t}\n\n\t} );\n\n\tconst cameraFolder = gui.addFolder( 'Camera' );\n\tcameraFolder.add( params, 'cameraProjection', [ 'Perspective', 'Orthographic', 'Equirectangular' ] ).onChange( v => {\n\n\t\tupdateCamera( v );\n\n\t} );\n\tcameraFolder.add( perspectiveCamera, 'focusDistance', 1, 100 ).onChange( reset );\n\tcameraFolder.add( perspectiveCamera, 'apertureBlades', 0, 10, 1 ).onChange( function ( v ) {\n\n\t\tperspectiveCamera.apertureBlades = v === 0 ? 0 : Math.max( v, 3 );\n\t\tthis.updateDisplay();\n\t\treset();\n\n\t} );\n\tcameraFolder.add( perspectiveCamera, 'apertureRotation', 0, 12.5 ).onChange( reset );\n\tcameraFolder.add( perspectiveCamera, 'anamorphicRatio', 0.1, 10.0 ).onChange( reset );\n\tcameraFolder.add( perspectiveCamera, 'bokehSize', 0, 50 ).onChange( reset ).listen();\n\tcameraFolder.add( perspectiveCamera, 'fStop', 0.3, 20 ).onChange( reset ).listen();\n\tcameraFolder.add( perspectiveCamera, 'fov', 25, 100 ).onChange( () => {\n\n\t\tperspectiveCamera.updateProjectionMatrix();\n\t\treset();\n\n\t} ).listen();\n\n\tconst matFolder1 = gui.addFolder( 'Shell Material' );\n\tmatFolder1.addColor( params.material1, 'color' ).onChange( reset );\n\tmatFolder1.addColor( params.material1, 'emissive' ).onChange( reset );\n\tmatFolder1.add( params.material1, 'emissiveIntensity', 0.0, 50.0, 0.01 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'opacity', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'transmission', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'ior', 0.9, 3.0 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'clearcoat', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'clearcoatRoughness', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'matte' ).onChange( reset );\n\tmatFolder1.add( params.material1, 'castShadow' ).onChange( reset );\n\tmatFolder1.close();\n\n\tconst matFolder2 = gui.addFolder( 'Ball Material' );\n\tmatFolder2.addColor( params.material2, 'color' ).onChange( reset );\n\tmatFolder2.addColor( params.material2, 'emissive' ).onChange( reset );\n\tmatFolder2.add( params.material2, 'emissiveIntensity', 0.0, 50.0, 0.01 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'opacity', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'transmission', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'ior', 0.9, 3.0 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'clearcoat', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'clearcoatRoughness', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'matte' ).onChange( reset );\n\tmatFolder2.add( params.material2, 'castShadow' ).onChange( reset );\n\tmatFolder2.close();\n\n\tconst matFolder3 = gui.addFolder( 'Floor Material' );\n\tmatFolder3.addColor( params.material3, 'color' ).onChange( reset );\n\tmatFolder3.add( params.material3, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder3.add( params.material3, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder3.add( params.material3, 'clearcoat', 0, 1 ).onChange( reset );\n\tmatFolder3.add( params.material3, 'clearcoatRoughness', 0, 1 ).onChange( reset );\n\tmatFolder3.add( params.material3, 'matte' ).onChange( reset );\n\tmatFolder3.add( params.material3, 'castShadow' ).onChange( reset );\n\tmatFolder3.close();\n\n\tanimate();\n\n}\n\nfunction onResize() {\n\n\tconst w = window.innerWidth;\n\tconst h = window.innerHeight;\n\tconst scale = params.resolutionScale;\n\tconst dpr = window.devicePixelRatio;\n\n\tptRenderer.setSize( w * scale * dpr, h * scale * dpr );\n\tptRenderer.reset();\n\n\trenderer.setSize( w, h );\n\trenderer.setPixelRatio( window.devicePixelRatio * scale );\n\n\tconst aspect = w / h;\n\n\tperspectiveCamera.aspect = aspect;\n\tperspectiveCamera.updateProjectionMatrix();\n\n\tconst orthoHeight = orthoWidth / aspect;\n\torthoCamera.top = orthoHeight / 2;\n\torthoCamera.bottom = orthoHeight / - 2;\n\torthoCamera.updateProjectionMatrix();\n\n}\n\nfunction reset() {\n\n\tptRenderer.reset();\n\n}\n\nfunction updateEnvBlur() {\n\n\tconst blurredTex = envMapGenerator.generate( envMap, params.environmentBlur );\n\tptRenderer.material.envMapInfo.updateFrom( blurredTex );\n\tscene.environment = blurredTex;\n\tptRenderer.reset();\n\n}\n\nfunction updateCamera( cameraProjection ) {\n\n\tif ( cameraProjection === 'Perspective' ) {\n\n\t\tif ( activeCamera ) {\n\n\t\t\tperspectiveCamera.position.copy( activeCamera.position );\n\n\t\t}\n\n\t\tactiveCamera = perspectiveCamera;\n\n\t} else if ( cameraProjection === 'Orthographic' ) {\n\n\t\tif ( activeCamera ) {\n\n\t\t\torthoCamera.position.copy( activeCamera.position );\n\n\t\t}\n\n\t\tactiveCamera = orthoCamera;\n\n\t} else { // Equirect\n\n\t\tif ( activeCamera ) {\n\n\t\t\tequirectCamera.position.copy( activeCamera.position );\n\n\t\t}\n\n\t\tactiveCamera = equirectCamera;\n\n\t}\n\n\tcontrols.object = activeCamera;\n\tptRenderer.camera = activeCamera;\n\n\tcontrols.update();\n\n\treset();\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tconst m1 = materials[ 0 ];\n\tm1.color.set( params.material1.color ).convertSRGBToLinear();\n\tm1.emissive.set( params.material1.emissive ).convertSRGBToLinear();\n\tm1.emissiveIntensity = params.material1.emissiveIntensity;\n\tm1.metalness = params.material1.metalness;\n\tm1.roughness = params.material1.roughness;\n\tm1.transmission = params.material1.transmission;\n\tm1.ior = params.material1.ior;\n\tm1.opacity = params.material1.opacity;\n\tm1.clearcoat = params.material1.clearcoat;\n\tm1.clearcoatRoughness = params.material1.clearcoatRoughness;\n\n\tconst m2 = materials[ 1 ];\n\tm2.color.set( params.material2.color ).convertSRGBToLinear();\n\tm2.emissive.set( params.material2.emissive ).convertSRGBToLinear();\n\tm2.emissiveIntensity = params.material2.emissiveIntensity;\n\tm2.metalness = params.material2.metalness;\n\tm2.roughness = params.material2.roughness;\n\tm2.transmission = params.material2.transmission;\n\tm2.ior = params.material2.ior;\n\tm2.opacity = params.material2.opacity;\n\tm2.clearcoat = params.material2.clearcoat;\n\tm2.clearcoatRoughness = params.material2.clearcoatRoughness;\n\n\tconst m3 = materials[ 2 ];\n\tm3.color.set( params.material3.color ).convertSRGBToLinear();\n\tm3.metalness = params.material3.metalness;\n\tm3.roughness = params.material3.roughness;\n\tm3.clearcoat = params.material3.clearcoat;\n\tm3.clearcoatRoughness = params.material3.clearcoatRoughness;\n\n\tptRenderer.material.materials.updateFrom( sceneInfo.materials, sceneInfo.textures );\n\tptRenderer.material.materials.setMatte( 0, params.material1.matte );\n\tptRenderer.material.materials.setMatte( 1, params.material2.matte );\n\tptRenderer.material.materials.setMatte( 2, params.material3.matte );\n\tptRenderer.material.materials.setCastShadow( 0, params.material1.castShadow );\n\tptRenderer.material.materials.setCastShadow( 1, params.material2.castShadow );\n\tptRenderer.material.materials.setCastShadow( 2, params.material3.castShadow );\n\n\tptRenderer.material.filterGlossyFactor = params.filterGlossyFactor;\n\tptRenderer.material.environmentIntensity = params.environmentIntensity;\n\tptRenderer.material.backgroundBlur = params.backgroundBlur;\n\tptRenderer.material.bounces = params.bounces;\n\tptRenderer.material.backgroundAlpha = params.backgroundAlpha;\n\tptRenderer.material.physicalCamera.updateFrom( activeCamera );\n\n\tactiveCamera.updateMatrixWorld();\n\n\tif ( params.backgroundAlpha < 1.0 ) {\n\n\t\tscene.background = null;\n\n\t} else {\n\n\t\tscene.background = scene.environment;\n\n\t}\n\n\tfor ( let i = 0, l = params.samplesPerFrame; i < l; i ++ ) {\n\n\t\tptRenderer.update();\n\n\t}\n\n\tif ( ptRenderer.samples < 1 ) {\n\n\t\trenderer.render( scene, activeCamera );\n\n\t}\n\n\trenderer.autoClear = false;\n\tfsQuad.material.map = ptRenderer.target.texture;\n\tfsQuad.render( renderer );\n\trenderer.autoClear = true;\n\n\tsamplesEl.innerText = `Samples: ${ Math.floor( ptRenderer.samples ) }`;\n\n}\n\n\n\n\n"],"names":["$ilwiq","parcelRequire","$0473c5c83fd2a77a$var$renderer","$0473c5c83fd2a77a$var$controls","$0473c5c83fd2a77a$var$sceneInfo","$0473c5c83fd2a77a$var$ptRenderer","$0473c5c83fd2a77a$var$activeCamera","$0473c5c83fd2a77a$var$fsQuad","$0473c5c83fd2a77a$var$materials","$0473c5c83fd2a77a$var$perspectiveCamera","$0473c5c83fd2a77a$var$orthoCamera","$0473c5c83fd2a77a$var$equirectCamera","$0473c5c83fd2a77a$var$envMap","$0473c5c83fd2a77a$var$envMapGenerator","$0473c5c83fd2a77a$var$scene","$0473c5c83fd2a77a$var$samplesEl","$0473c5c83fd2a77a$var$params","material1","color","emissive","emissiveIntensity","roughness","metalness","ior","transmission","opacity","clearcoat","clearcoatRoughness","matte","castShadow","material2","material3","multipleImportanceSampling","stableNoise","environmentIntensity","environmentRotation","environmentBlur","backgroundBlur","bounces","samplesPerFrame","acesToneMapping","resolutionScale","window","devicePixelRatio","transparentTraversals","filterGlossyFactor","tiles","backgroundAlpha","checkerboardTransparency","cameraProjection","location","hash","includes","$0473c5c83fd2a77a$var$onResize","w","innerWidth","h","innerHeight","scale","dpr","setSize","reset","setPixelRatio","aspect","updateProjectionMatrix","orthoHeight","top","bottom","$0473c5c83fd2a77a$var$reset","$0473c5c83fd2a77a$var$updateEnvBlur","blurredTex","generate","material","envMapInfo","updateFrom","environment","$0473c5c83fd2a77a$var$updateCamera","position","copy","object","camera","update","$0473c5c83fd2a77a$var$animate","requestAnimationFrame","m1","set","convertSRGBToLinear","m2","m3","materials","textures","setMatte","setCastShadow","physicalCamera","updateMatrixWorld","background","i","l","samples","render","autoClear","map","target","texture","innerText","Math","floor","max","async","WebGLRenderer","antialias","toneMapping","ACESFilmicToneMapping","outputEncoding","sRGBEncoding","setClearColor","document","body","appendChild","domElement","$4CEV9","PhysicalCamera","OrthographicCamera","$0473c5c83fd2a77a$var$orthoWidth","EquirectCamera","PathTracingRenderer","alpha","PhysicalPathTracingMaterial","setDefine","Number","$RPVlj","FullScreenQuad","MeshBasicMaterial","blending","CustomBlending","$5Rd1x","OrbitControls","addEventListener","Scene","getElementById","BlurredEnvMapGenerator","envMapPromise","Promise","resolve","$891vQ","RGBELoader","load","generator","$cVdfP","PathTracingSceneWorker","gltfPromise","$7lx9d","GLTFLoader","setMeshoptDecoder","$kp7Te","MeshoptDecoder","loadAsync","then","gltf","group","Group","scene","setScalar","add","box","Box3","setFromObject","Mesh","CylinderBufferGeometry","MeshStandardMaterial","geometry","toNonIndexed","clearGroups","y","min","traverse","c","computeVertexNormals","name","result","bvh","normalAttribute","attributes","normal","tangentAttribute","tangent","uvAttribute","uv","materialIndexAttribute","materialIndex","setTextures","dispose","all","remove","classList","gui","$jiuw3","GUI","ptFolder","addFolder","onChange","value","NoToneMapping","needsUpdate","envFolder","PI","v","setFromMatrix4","Matrix4","makeRotationY","cameraFolder","apertureBlades","this","updateDisplay","listen","matFolder1","addColor","close","matFolder2","matFolder3","$0473c5c83fd2a77a$var$init"],"version":3,"file":"materialBall.2d30a0c5.js.map"}